'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactDelegateTransitionGroup = require('react-delegate-transition-group');

var _reactDelegateTransitionGroup2 = _interopRequireDefault(_reactDelegateTransitionGroup);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ReactTransitionEvents = require('react/lib/ReactTransitionEvents');

var _react = require('react');

var _reactDom = require('react-dom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TICK = 17;

var SlideAnimation = function (_Component) {
    _inherits(SlideAnimation, _Component);

    function SlideAnimation() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, SlideAnimation);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SlideAnimation.__proto__ || Object.getPrototypeOf(SlideAnimation)).call.apply(_ref, [this].concat(args))), _this), _this.childWillEnter = function (component, done) {
            var animationName = _this.props.animationName;

            var node = (0, _reactDom.findDOMNode)(component);
            var offsetHeight = node.offsetHeight;


            node.classList.add(animationName + '-enter');

            setTimeout(function () {
                (0, _ReactTransitionEvents.addEndEventListener)(node, endListener);
                node.classList.add(animationName + '-enter-active');
                node.style.height = offsetHeight + 'px';

                function endListener(event) {
                    if (event.target !== node) return;
                    node.style.height = null;
                    node.classList.remove(animationName + '-enter', animationName + '-enter-active');
                    (0, _ReactTransitionEvents.removeEndEventListener)(node, endListener);
                    done();
                }
            }, TICK);
        }, _this.childWillLeave = function (component, done) {
            var animationName = _this.props.animationName;

            var node = (0, _reactDom.findDOMNode)(component);
            var offsetHeight = node.offsetHeight;


            node.classList.add(animationName + '-leave');
            node.style.height = offsetHeight + 'px';

            setTimeout(function () {
                (0, _ReactTransitionEvents.addEndEventListener)(node, endListener);
                node.classList.add(animationName + '-leave-active');
                node.style.height = null;

                function endListener(event) {
                    if (event.target !== node) return;
                    node.classList.remove(animationName + '-leave', animationName + '-leave-active');
                    (0, _ReactTransitionEvents.removeEndEventListener)(node, endListener);
                    done();
                }
            }, TICK);
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(SlideAnimation, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                animationName = _props.animationName,
                rest = _objectWithoutProperties(_props, ['animationName']);

            return (0, _react.createElement)(_reactDelegateTransitionGroup2.default, _extends({}, rest, { onEnter: this.childWillEnter, onLeave: this.childWillLeave }));
        }
    }]);

    return SlideAnimation;
}(_react.Component);

SlideAnimation.propTypes = {
    children: _propTypes2.default.node,
    component: _propTypes2.default.string,
    animationName: _propTypes2.default.string
};
SlideAnimation.defaultProps = {
    component: 'div',
    animationName: 'slide-animation'
};
exports.default = SlideAnimation;