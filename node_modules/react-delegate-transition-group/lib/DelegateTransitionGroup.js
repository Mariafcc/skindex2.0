'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _DelegateTransitionGroupChild = require('./DelegateTransitionGroupChild');

var _DelegateTransitionGroupChild2 = _interopRequireDefault(_DelegateTransitionGroupChild);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _reactTransitionGroup = require('react-transition-group');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DelegateTransitionGroup = function (_Component) {
    _inherits(DelegateTransitionGroup, _Component);

    function DelegateTransitionGroup() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, DelegateTransitionGroup);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DelegateTransitionGroup.__proto__ || Object.getPrototypeOf(DelegateTransitionGroup)).call.apply(_ref, [this].concat(args))), _this), _this._wrapChild = function (child) {
            var _this$props = _this.props,
                onAppear = _this$props.onAppear,
                onEnter = _this$props.onEnter,
                onLeave = _this$props.onLeave;


            return (0, _react.createElement)(_DelegateTransitionGroupChild2.default, { onAppear: onAppear, onEnter: onEnter, onLeave: onLeave }, child);
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(DelegateTransitionGroup, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                onAppear = _props.onAppear,
                onEnter = _props.onEnter,
                onLeave = _props.onLeave,
                rest = _objectWithoutProperties(_props, ['onAppear', 'onEnter', 'onLeave']);

            return (0, _react.createElement)(_reactTransitionGroup.TransitionGroup, _extends({}, rest, { childFactory: this._wrapChild }));
        }
    }]);

    return DelegateTransitionGroup;
}(_react.Component);

DelegateTransitionGroup.propTypes = {
    onAppear: _propTypes2.default.func,
    onEnter: _propTypes2.default.func,
    onLeave: _propTypes2.default.func
};
exports.default = DelegateTransitionGroup;